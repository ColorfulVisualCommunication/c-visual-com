Python 3.10.11 (main, Apr  4 2023, 22:10:32) [GCC 12.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> from cvcapp import app, db
>>> app.app_context().push()
>>> db.create_all()
>>> from cvcapp import app, Product
>>> app.app_context().push()
>>> product2 = Product(name = "Dell Monitor", barcode = "44475479347", price = 2800, description ="Monitor resolution is 1920 by 1080 24 inch")
>>> db.session.add(product1)
>>> db.session.commit()
>>> Product.query.all()
[Product HP Monitor]
>>> product2 = Product(name = "Dell Monitor", barcode = "44475479347", price = 2800, description ="Monitor resolution is 1920 by 1080 24 inch")
>>> db.session.add(product2)
>>> db.session.commit()
>>> Product.query.all()
[Product HP Monitor, Product Dell Monitor]
>>> 

The code snippet from cvcapp import app, Product is importing the app and Product objects from the cvcapp module.

The line >>> app.app_context().push() is creating a new application context and pushing it onto the context stack. This is typically done when working with a Flask application to ensure that the application context is available for the current thread and can be used for running the application and accessing the application's configuration and resources.

Standard Library Imports
Related Third-Party Imports
Local (Your Own) Imports

<-- .py package -->
  __pycache__
  static
  templates
  __init__
  models.py
  routes.py